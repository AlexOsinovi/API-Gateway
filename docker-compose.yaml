services:
  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_DB: auth_service_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  order-db:
    image: postgres:15
    container_name: order-db
    environment:
      POSTGRES_DB: order_service_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  user-redis:
    image: redis:7
    container_name: user-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  auth-service:
    image: aliakseiasinavy/auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/auth_service_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION}
      JWT_REFRESH_TOKEN_EXPIRATION: ${JWT_REFRESH_TOKEN_EXPIRATION}
    depends_on:
      - auth-db
    networks:
      - app-network

  user-service:
    image: aliakseiasinavy/user-service
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_REDIS_HOST: ${SPRING_REDIS_HOST}
      SPRING_REDIS_PORT: 6379
    depends_on:
      - user-db
      - user-redis
    networks:
      - app-network

  order-service:
    image: aliakseiasinavy/order-service
    container_name: order-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-db:5432/order_service_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      ORDER_USER_SERVICE_URL: ${ORDER_USER_SERVICE_URL}
    depends_on:
      - order-db
    networks:
      - app-network

  gateway:
    build: .
    container_name: gateway
    ports:
      - "8083:8083"
    environment:
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      USER_SERVICE_URL: ${USER_SERVICE_URL}
      ORDER_SERVICE_URL: ${ORDER_SERVICE_URL}
      SPRING_BOOT_DEBUG: true
    depends_on:
      - auth-service
      - user-service
      - order-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  auth-db-data:
  user-db-data:
  order-db-data:
  redis-data: